name: Deploy to environment
on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string
      resource-directory:
        required: true
        type: string
      site-id:
        required: true
        type: string
      environment:
        required: true
        type: string
      node-version:
        type: string
        default: 18.x
    secrets:
      project-number:
        required: true
      project-name:
        required: true
      token:
        required: true
env:
  PROJECT_NUMBER: ${{ secrets.project-number }}
  PROJECT_NAME: ${{ secrets.project-name }}-${{ inputs.environment }}
  ENVIRONMENT: ${{ inputs.environment == 'dev' && 'DEV' || inputs.environment == 'prod' && 'PROD' }}
permissions: write-all
jobs:
  deploy:
    name: Deploy to environment
    environment: ${{ inputs.environment == 'dev' && 'DEV' || inputs.environment == 'prod' && 'PROD' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: GCP Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider
          service_account: devops-infra@${{ env.PROJECT_NAME }}.iam.gserviceaccount.com
          create_credentials_file: true
      - name: Setup Node ${{inputs.node-version}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{inputs.node-version}}
          registry-url: https://npm.pkg.github.com
      - name: Prepare environment
        run: cp environments/${{env.ENVIRONMENT}}.env .env
        working-directory: ${{inputs.path}}
      - name: Install dependencies
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.token || secrets.GH_PRECURSORA_DEFAULT_PAT }}
        working-directory: ${{inputs.path}}
      - name: Install Firebase Tools
        run: npm install -g firebase-tools
      - name: Prepare
        run: > 
          echo '{"projects": {"default": "${{env.PROJECT_NAME}}"}}' > .firebaserc
        working-directory: ${{inputs.path}}
      - name: Build
        run: npm run build
        working-directory: ${{inputs.path}}
      - name: Deploy
        run: cat $GOOGLE_APPLICATION_CREDENTIALS && firebase deploy --only hosting
        working-directory: ${{inputs.path}}
