name: Validate PR to PROD
on:
  workflow_call:
    inputs:
      without-infra:
        type: boolean
        default: false
jobs:
  origin-validation:
    name: Origin validation
    uses: precursora/is-module-general-deploy-actions-extensions/.github/workflows/ext-pull-request-origin-validation.yml@main
    with:
      sha: ${{github.event.pull_request.head.sha}}
      expected_origin: develop
  init:
    needs: origin-validation
    name: Initialization
    uses: precursora/is-module-general-deploy-actions-extensions/.github/workflows/ext-initialization-pipeline-properties.yml@main
    with:
      without-integration-tests: true
  validation-infra:
    needs: init
    name: Validate infrastructure
    if: needs.init.outputs.destroy == 'false' && !inputs.without-infra
    uses: precursora/is-module-gcp-deploy-actions-extensions/.github/workflows/ext-gcp-terraform-validation.yml@main
    with:
      path: infra
  unit-tests:
    name: Unit tests
    needs: init
    uses: precursora/is-module-general-tests-actions-extensions/.github/workflows/ext-nodejs-unit-test.yml@main
    if: needs.init.outputs.destroy == 'false'
    with:
      sha: ${{github.event.pull_request.head.sha}}
      minimum-coverage: ${{needs.init.outputs.unit-tests-gate}}
      path: ${{needs.init.outputs.unit-tests-base-path}}
      report-index-file: ${{needs.init.outputs.unit-tests-report-index-file}}
      node-version: ${{needs.init.outputs.runner-version}}
    secrets: inherit
  mutation-tests:
    name: Mutation tests
    needs: init
    uses: precursora/is-module-general-tests-actions-extensions/.github/workflows/ext-nodejs-mutation-test.yml@main
    if: needs.init.outputs.destroy == 'false'
    with:
      sha: ${{github.event.pull_request.head.sha}}
      minimum-coverage: ${{needs.init.outputs.mutation-tests-gate}}
      path: ${{needs.init.outputs.mutation-tests-base-path}}
      report-index-file: ${{needs.init.outputs.mutation-tests-report-index-file}}
      node-version: ${{needs.init.outputs.runner-version}}
    secrets: inherit
  generate-coverage-summary:
    needs:
      - origin-validation
      - unit-tests
      - mutation-tests
    name: Coverage
    if: always() && needs.origin-validation.result == 'success'
    uses: precursora/is-module-general-deploy-actions-extensions/.github/workflows/ext-tests-generate-coverage-summary.yml@main
    with:
      unit-tests-report: ${{needs.unit-tests.outputs.indexes}}
      mutation-tests-report: ${{needs.mutation-tests.outputs.indexes}}
  finish:
    needs:
      - init
      - validation-infra
      - unit-tests
      - mutation-tests
      - generate-coverage-summary
    name: Finish
    if: always()
    uses: precursora/is-module-general-deploy-actions-extensions/.github/workflows/ext-create-commit-status-check.yml@main
    with:
      sha: ${{github.event.pull_request.head.sha}}
      state: ${{ (needs.init.outputs.destroy != 'false' || (needs.unit-tests.result == 'success' && needs.mutation-tests.result == 'success' && (inputs.without-infra || needs.validation-infra.result == 'success'))) && 'success' || 'failure' }}
      context: Finish Pull Request Validation
      description: ${{ (needs.init.outputs.destroy != 'false' || (needs.unit-tests.result == 'success' && needs.mutation-tests.result == 'success' && (inputs.without-infra || needs.validation-infra.result == 'success'))) && 'Successful' || 'Failed' }}
