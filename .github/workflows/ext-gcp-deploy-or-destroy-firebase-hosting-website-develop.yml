name: Deploy to GCP - DEV
on:
  workflow_call:
    outputs:
      deployed: 
        value: ${{jobs.deploy.result == 'success' && 'true' || 'false'}}
      destroyed: 
        value: ${{jobs.destroy.result == 'success' && 'true' || 'false'}}
permissions: write-all
jobs:
  init:
    name: Initialization
    uses: ./.github/workflows/ext-initialization-pipeline-website-properties.yml
  destroy-infra:
    needs: init
    name: Destroy resources
    if: needs.init.outputs.destroy != 'false'
    uses: ./.github/workflows/ext-gcp-terraform-destroy.yml
    with:
      environment: dev
      destroy: "[]"
    secrets:
      project-number: ${{ secrets.GCP_PROJECT_NUMBER_DEV }}
      project-name: ${{ secrets.GCP_PROJECT_NAME }}
      service-name: ${{ secrets.GCP_SERVICE_NAME }}
      cloudflare-api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      cloudflare-zone-id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      aiven-api-token: ${{ secrets.AIVEN_API_TOKEN_DEV }}
  deploy-infra:
    needs: init
    if: needs.init.outputs.destroy == 'false'
    name: Deploy
    uses: ./.github/workflows/ext-gcp-terraform-deploy.yml
    with:
      environment: dev
    secrets:
      project-number: ${{ secrets.GCP_PROJECT_NUMBER_DEV }}
      project-name: ${{ secrets.GCP_PROJECT_NAME }}
      service-name: ${{ secrets.GCP_SERVICE_NAME }}
      cloudflare-api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      cloudflare-zone-id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      aiven-api-token: ${{ secrets.AIVEN_API_TOKEN_DEV }}
  deploy-app:
    needs:
      - init
      - deploy-infra
    name: Deploy
    if: needs.init.outputs.destroy == 'false'
    uses: ./.github/workflows/ext-gcp-deploy-website-firebase-hosting.yml
    with:
      path: ${{ needs.init.outputs.deploy-base-path }}
      resource-directory: ${{ needs.init.outputs.deploy-resource-directory }}
      site-id: ${{ needs.init.outputs.deploy-storage-dev }}
      environment: dev
      node-version: ${{needs.init.outputs.runner-version}}
    secrets:
      project-number: ${{ secrets.GCP_PROJECT_NUMBER_PROD }}
      project-name: ${{ secrets.GCP_PROJECT_NAME }}
      token: ${{ secrets.GH_PRECURSORA_DEFAULT_PAT }}
  finish-deploy:
    name: Finish deploy
    needs:
      - deploy-app
      - destroy-infra
    if: always() && (needs.deploy-app.result == 'success' || needs.destroy-infra.result == 'success')
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - run: echo "‚è≥ Finalizando deploy..."
