name: Validate PR to DEV
on:
  workflow_call:
jobs:
  init:
    name: Initialization
    uses: ./.github/workflows/ext-initialization-pipeline-properties.yml
  unit-tests:
    name: Unit tests
    needs: init
    uses: ./.github/workflows/ext-spring-maven-unit-test.yml
    if: needs.init.outputs.unit-tests-disabled != 'true' && needs.init.outputs.destroy == 'false'
    with:
      sha: ${{github.event.pull_request.head.sha}}
      minimum-coverage: 90
      path: ${{needs.init.outputs.unit-tests-base-path}}
      report-index-file: ${{needs.init.outputs.unit-tests-report-index-file}}
      report-surefire-file: ${{needs.init.outputs.unit-tests-report-sufire-file}}
    secrets: inherit
  mutation-tests:
    name: Mutation tests
    needs: init
    uses: ./.github/workflows/ext-spring-maven-mutation-test.yml
    if: needs.init.outputs.mutation-tests-disabled != 'true' && needs.init.outputs.destroy == 'false'
    with:
      sha: ${{github.event.pull_request.head.sha}}
      minimum-coverage: 70
      path: ${{needs.init.outputs.mutation-tests-base-path}}
      report-index-file: ${{needs.init.outputs.mutation-tests-report-index-file}}
    secrets: inherit
  generate-coverage-summary:
    needs:
      - unit-tests
      - mutation-tests
    name: Coverage
    if: always()
    uses: ./.github/workflows/ext-tests-generate-coverage-summary.yml
    with:
      unit-tests-report: ${{needs.unit-tests.outputs.indexes}}
      mutation-tests-report: ${{needs.mutation-tests.outputs.indexes}}
  finish:
    needs: 
      - init
      - unit-tests
      - mutation-tests
      - generate-coverage-summary
    name: Finish
    if: always()
    uses: ./.github/workflows/ext-create-commit-status-check.yml
    with:
      sha: ${{github.event.pull_request.head.sha}}
      state: ${{ (needs.init.outputs.destroy != 'false' || ((needs.init.outputs.unit-tests-disabled == 'true' || needs.unit-tests.result == 'success') && (needs.init.outputs.mutation-tests-disabled == 'true' || needs.mutation-tests.result == 'success'))) && 'success' || 'failure' }}
      context: Finish Pull Request Validation
      description: ${{ (needs.init.outputs.destroy != 'false' || ((needs.init.outputs.unit-tests-disabled == 'true' || needs.unit-tests.result == 'success') && (needs.init.outputs.mutation-tests-disabled == 'true' || needs.mutation-tests.result == 'success'))) && 'Successful' || 'Failed' }}
