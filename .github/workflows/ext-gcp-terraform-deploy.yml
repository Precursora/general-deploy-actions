name: Deploy
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      path:
        type: string
        default: ./
env:
  PROJECT_NUMBER: ${{ inputs.environment == 'dev' && secrets.GCP_PROJECT_NUMBER_DEV || inputs.environment == 'prod' && secrets.GCP_PROJECT_NUMBER_PROD }}
  PROJECT_NAME: ${{ secrets.GCP_PROJECT_NAME }}-${{ inputs.environment }}
  SERVICE_NAME: ${{ secrets.GCP_SERVICE_NAME }}-${{ inputs.environment }}
  TF_VAR_FILE: ./environments/${{ inputs.environment }}/terraform.tfvars
permissions: write-all
jobs:
  deploy:
    name: Deploy infrastructure
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment == 'dev' && 'DEV' || inputs.environment == 'prod' && 'PROD' }}
    env:
      TF_VAR_cloudflare_provider_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_provider_zone_id_precursoracombr: ${{ secrets.CLOUDFLARE_ZONE_ID_PRECURSORACOMBR }}
      TF_VAR_cloudflare_provider_zone_id_felipemenezescombr: ${{ secrets.CLOUDFLARE_ZONE_ID_FELIPEMENEZESCOMBR }}
      TF_VAR_aiven_provider_api_token: ${{ inputs.environment == 'dev' && secrets.AIVEN_API_TOKEN_DEV || inputs.environment == 'prod' && secrets.AIVEN_API_TOKEN_PROD }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: GCP Auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider
          service_account: devops-infra@${{ env.PROJECT_NAME }}.iam.gserviceaccount.com
      - name: Setup backend
        run: |
          cat > backend.tf << EOF
          terraform {
            backend "gcs" {
              bucket  = "${{ env.PROJECT_NAME }}-state-files"
              prefix  = "${{ github.event.repository.name }}"
            }
          }
          EOF
        working-directory: ${{inputs.path}}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform init
        run: terraform init
        working-directory: ${{inputs.path}}
      - name: Terraform plan
        run: terraform plan -var-file="${{ env.TF_VAR_FILE }}"
        working-directory: ${{inputs.path}}
      - name: Terraform apply
        run: terraform apply -auto-approve -var-file="${{ env.TF_VAR_FILE }}"
        working-directory: ${{inputs.path}}
