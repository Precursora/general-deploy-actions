name: Validate PR to PROD
on:
  workflow_call:
jobs:
  origin-validation:
    name: Origin validation
    uses: ./.github/workflows/ext-pull-request-origin-validation.yml
    with:
      sha: ${{github.event.pull_request.head.sha}}
      expected_origin: develop
  unit-tests:
    needs: origin-validation
    name: Unit tests
    uses: ./.github/workflows/ext-laravel-unit-test.yml
    with:
      sha: ${{github.event.pull_request.head.sha}}
      minimum-coverage: 60
    secrets: inherit
  mutation-tests:
    needs: origin-validation
    name: Mutation tests
    uses: ./.github/workflows/ext-laravel-mutation-test.yml
    with:
      sha: ${{github.event.pull_request.head.sha}}
      minimum-coverage: 40
    secrets: inherit
  generate-coverage-summary:
    needs:
      - origin-validation
      - unit-tests
      - mutation-tests
    name: Coverage
    uses: ./.github/workflows/ext-tests-generate-coverage-summary.yml
    if: always() && needs.origin-validation.result == 'success'
    with:
      unit-tests-report: ${{needs.unit-tests.outputs.indexes}}
      mutation-tests-report: ${{needs.mutation-tests.outputs.indexes}}
  finish:
    needs: 
      - origin-validation
      - unit-tests
      - mutation-tests
      - generate-coverage-summary
    name: Finish
    uses: ./.github/workflows/ext-create-commit-status-check.yml
    with:
      sha: ${{github.event.pull_request.head.sha}}
      state: success
      context: Finish Pull Request Validation
      description: Successful
