name: Custom command
on:
  workflow_call:
    inputs:
      command-entrypoint:
        required: true
        type: string
      command-args:
        required: true
        type: string
      region:
        required: true
        type: string
      instances:
        required: true
        type: string
      service-account:
        required: true
        type: string
      environment:
        required: true
        type: string
      registry:
        required: true
        type: string
      env-vars-file:
        required: true
        type: string
permissions: write-all
env:
  PROJECT_NUMBER: ${{ inputs.environment == 'dev' && secrets.GCP_PROJECT_NUMBER_DEV || inputs.environment == 'prod' && secrets.GCP_PROJECT_NUMBER_PROD }}
  PROJECT_NAME: ${{ secrets.GCP_PROJECT_NAME }}-${{ inputs.environment }}
  SERVICE_NAME: ${{ secrets.GCP_SERVICE_NAME }}-${{ inputs.environment }}
  IMAGE_PATH: ${{ inputs.registry }}/${{ secrets.GCP_PROJECT_NAME }}-${{ inputs.environment }}/${{ secrets.GCP_PROJECT_NAME }}-${{ inputs.environment }}/${{ secrets.GCP_SERVICE_NAME }}-${{ inputs.environment }}:${{ github.sha }}
jobs:
  execute:
    name: Custom command
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        run: echo "Preparing to execute custom command..."
      - name: Checkout code
        uses: actions/checkout@v4
      - name: GCP Auth
        uses: google-github-actions/auth@v2
        id: auth
        if: ${{ inputs.command-entrypoint != '' && inputs.command-args != '' }}
        with:
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider
          service_account: devops-app@${{ env.PROJECT_NAME }}.iam.gserviceaccount.com
      - name: Check if jobs exists
        id: status
        if: ${{ steps.auth.outcome == 'success' }}
        run: echo "status="$(gcloud run jobs describe ${{ env.SERVICE_NAME }} --region ${{ inputs.region }} --format 'value(status.conditions.status)') >> $GITHUB_OUTPUT
      - name: Create job if not exists
        if: ${{ steps.status.outcome == 'success' && steps.status.outputs.status != 'True' }}
        run: gcloud run jobs create ${{ env.SERVICE_NAME }} --image ${{ env.IMAGE_PATH }} --region ${{ inputs.region }}
      - name: Update job
        if: ${{ steps.auth.outcome == 'success' }}
        run: |
          gcloud run jobs update ${{ env.SERVICE_NAME }} \
          --image ${{ env.IMAGE_PATH }} \
          --region ${{ inputs.region }} \
          --command="${{ inputs.command-entrypoint }}" \
          --args="${{ inputs.command-args }}" \
          --max-retries 0 \
          --task-timeout 180 \
          --add-cloudsql-instances=${{ inputs.instances }} \
          --service-account ${{ inputs.service-account }}@${{ env.PROJECT_NAME }}.iam.gserviceaccount.com \
          --env-vars-file="${{ inputs.env-vars-file }}"
      - name: Execute job
        if: ${{ steps.auth.outcome == 'success' }}
        run: gcloud run jobs execute ${{ env.SERVICE_NAME }} --region ${{ inputs.region }} --wait
